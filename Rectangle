public abstract class Employee {
    // Các thành viên và phương thức như đã mô tả trong yêu cầu của bạn
    // ...
    public abstract double earnings();
    // ...
}
public class SalariedEmployee extends Employee {
    private double weeklySalary;

    public SalariedEmployee(double weeklySalary) {
        this.weeklySalary = weeklySalary;
    }

    @Override
    public double earnings() {
        return weeklySalary;
    }
}
public class HourlyEmployee extends Employee {
    private double hourlyRate;
    private double hoursWorked;

    public HourlyEmployee(double hourlyRate, double hoursWorked) {
        this.hourlyRate = hourlyRate;
        this.hoursWorked = hoursWorked;
    }

    @Override
    public double earnings() {
        if (hoursWorked <= 40) {
            return hourlyRate * hoursWorked;
        } else {
            double normalPay = hourlyRate * 40;
            double extraPay = (hoursWorked - 40) * hourlyRate * 1.5;
            return normalPay + extraPay;
        }
    }
}
public class CommissionEmployee extends Employee {
    private double sales;
    private double commissionRate;

    public CommissionEmployee(double sales, double commissionRate) {
        this.sales = sales;
        this.commissionRate = commissionRate;
    }

    @Override
    public double earnings() {
        return sales * commissionRate;
    }
}
public class BasePlusCommissionEmployee extends CommissionEmployee {
    private double baseSalary;

    public BasePlusCommissionEmployee(double sales, double commissionRate, double baseSalary) {
        super(sales, commissionRate);
        this.baseSalary = baseSalary;
    }

    @Override
    public double earnings() {
        return super.earnings() + baseSalary;
    }
}
