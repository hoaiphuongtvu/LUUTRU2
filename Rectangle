// Lớp cơ sở abstract Employee
public abstract class Employee {
    private String firstName;
    private String lastName;
    private String socialSecurityNumber;

    public Employee(String firstName, String lastName, String socialSecurityNumber) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.socialSecurityNumber = socialSecurityNumber;
    }

    // Các phương thức get và set

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getSocialSecurityNumber() {
        return socialSecurityNumber;
    }

    public void setSocialSecurityNumber(String socialSecurityNumber) {
        this.socialSecurityNumber = socialSecurityNumber;
    }

    // Phương thức thuần ảo earnings()
    public abstract double earnings();

    // Phương thức đa hình print()
    public void print() {
        System.out.println("Employee: " + firstName + " " + lastName + "\nSocial Security Number: " + socialSecurityNumber);
    }
}

// Lớp SalariedEmployee kế thừa từ Employee
public class SalariedEmployee extends Employee {
    private double weeklySalary;

    public SalariedEmployee(String firstName, String lastName, String socialSecurityNumber, double weeklySalary) {
        super(firstName, lastName, socialSecurityNumber);
        this.weeklySalary = weeklySalary;
    }

    @Override
    public double earnings() {
        return weeklySalary;
    }

    @Override
    public void print() {
        super.print();
        System.out.println("Earnings: $" + earnings() + " per week");
    }
}

// Lớp HourlyEmployee kế thừa từ Employee
public class HourlyEmployee extends Employee {
    private double wage;
    private double hours;

    public HourlyEmployee(String firstName, String lastName, String socialSecurityNumber, double wage, double hours) {
        super(firstName, lastName, socialSecurityNumber);
        this.wage = wage;
        this.hours = hours;
    }

    @Override
    public double earnings() {
        if (hours <= 40) {
            return wage * hours;
        } else {
            return (40 * wage) + ((hours - 40) * wage * 1.5);
        }
    }

    @Override
    public void print() {
        super.print();
        System.out.println("Earnings: $" + earnings() + " for the week");
    }
}

// Tương tự, triển khai cho CommissionEmployee và BasePlusCommissionEmployee

// Ví dụ sử dụng
public class Main {
    public static void main(String[] args) {
        SalariedEmployee salariedEmployee = new SalariedEmployee("John", "Doe", "123-45-6789", 1200.0);
        salariedEmployee.print();

        HourlyEmployee hourlyEmployee = new HourlyEmployee("Jane", "Smith", "987-65-4321", 15.0, 45.0);
        hourlyEmployee.print();

        // Tạo và sử dụng các đối tượng của các lớp khác tương tự
    }
}
